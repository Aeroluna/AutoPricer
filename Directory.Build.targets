<?xml version="1.0" encoding="utf-8"?>
<!-- This file contains the build tasks and targets for verifying the manifest, zipping Release builds,
     and copying the plugin to to your Beat Saber folder. Only edit this if you know what you are doing. -->
<Project>
  <PropertyGroup>
    <OutputAssemblyName>$(OutputPath)$(AssemblyName)</OutputAssemblyName>
    <!--Path to folder to be zipped. Needs to be relative to the project directory to work without changes to the 'BuildForCI' target.-->
    <ArtifactDestination>$(OutputPath)Final</ArtifactDestination>
    <ErrorOnMismatchedVersions Condition="'$(Configuration)' == 'Release'">True</ErrorOnMismatchedVersions>
  </PropertyGroup>
  <!--Build Targets-->
  <!--Creates a BeatMods compliant zip file with the release.-->
  <Target Name="ZipRelease" AfterTargets="Build" Condition="'$(DisableZipRelease)' != 'True' AND '$(Configuration)' == 'Release'">
    <PropertyGroup>
      <!--Set 'ArtifactName' if it failed before.-->
      <ArtifactName Condition="'$(ArtifactName)' == ''">$(AssemblyName)</ArtifactName>
      <DestinationDirectory>$(OutDir)zip\</DestinationDirectory>
    </PropertyGroup>
    <ItemGroup>
      <OldZips Include="$(DestinationDirectory)$(AssemblyName)*.zip"/>
    </ItemGroup>
    <Copy SourceFiles="$(OutputAssemblyName).dll" DestinationFiles="$(ArtifactDestination)\BepInEx\plugins\$(AssemblyName).dll"/>
    <Message Text="PluginVersion: $(PluginVersion), AssemblyVersion: $(AssemblyVersion), GameVersion: $(GameVersion)" Importance="high"/>
    <Delete Files="@(OldZips)" TreatErrorsAsWarnings="true" ContinueOnError="true"/>
    <ZipDir SourceDirectory="$(ArtifactDestination)" DestinationFile="$(DestinationDirectory)$(ArtifactName).zip"/>
  </Target>
  <!--Copies the assembly and pdb to the Beat Saber folder.-->
  <Target Name="CopyToPlugins" AfterTargets="Build" Condition="'$(DisableCopyToPlugins)' != 'True' AND '$(ContinuousIntegrationBuild)' != 'True'">
    <PropertyGroup>
      <PluginDir>$(GameDir)\BepInEx\plugins</PluginDir>
      <CanCopyToPlugins>True</CanCopyToPlugins>
      <CopyToPluginsError Condition="!Exists('$(PluginDir)')">Unable to copy assembly to game folder, did you set 'GameDir' correctly in your 'csproj.user' file? Plugins folder doesn't exist: '$(PluginDir)'.</CopyToPluginsError>
      <!--Error if 'BeatSaberDir' does not have 'Beat Saber.exe'-->
      <CopyToPluginsError Condition="!Exists('$(GameDir)\UnityPlayer.dll')">Unable to copy to Plugins folder, '$(GameDir)' does not appear to be a Unity game install.</CopyToPluginsError>
      <!--Error if 'BeatSaberDir' is the same as 'LocalRefsDir'-->
      <CopyToPluginsError Condition="'$(GameDir)' == '$(LocalRefsDir)' OR '$(GameDir)' == ''">Unable to copy to Plugins folder, 'GameDir' has not been set in your 'csproj.user' file.</CopyToPluginsError>
      <CanCopyToPlugins Condition="'$(CopyToPluginsError)' != ''">False</CanCopyToPlugins>
    </PropertyGroup>
    <Warning Text="$(CopyToPluginsError)" Condition="'$(CopyToPluginsError)' != ''"/>
    <Message Text="Copying '$(OutputAssemblyName).dll' to '$(PluginDir)'." Importance="high" Condition="$(CanCopyToPlugins)"/>
    <Copy SourceFiles="$(OutputAssemblyName).dll" DestinationFiles="$(PluginDir)\$(AssemblyName).dll" Condition="$(CanCopyToPlugins)"/>
    <Copy SourceFiles="$(OutputAssemblyName).pdb" DestinationFiles="$(PluginDir)\$(AssemblyName).pdb" Condition="'$(CanCopyToPlugins)' == 'True' AND Exists('$(OutputAssemblyName).pdb')"/>
  </Target>
</Project>
